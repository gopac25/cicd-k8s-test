pipeline {
   agent any

   environment {
     ORGANIZATION_NAME = "gopac25"
     YOUR_DOCKERHUB_USERNAME = "gopac"

     SERVICE_NAME = "cicd-k8s-test"
     registry="${YOUR_DOCKERHUB_USERNAME}/${ORGANIZATION_NAME}-${SERVICE_NAME}:latest"
     registryCredential = 'dockerhub'
     dockerImage = ''
   }
   
   // tools { 
    //    maven 'maven 3.6.3'  
   // }

   stages {
      stage('Preparation') {
         steps {
            cleanWs()
            git credentialsId: 'GitHub', url: "https://github.com/${ORGANIZATION_NAME}/${SERVICE_NAME}"
         }
      }
      stage('Build') {
         steps {
            def mvnHome = tool 'maven'
            sh "${mvnHome}/bin/mvn clean package"
         }
      }
      stage('Code Analysis') {
         steps {
           def mvnHome = tool 'maven'
           sh "${mvnHome}/bin/mvn sonar:sonar"
         }
      }
      
           stage('Deploy to Nexus') {
         steps {
          def mvnHome = tool 'maven'
          sh "${mvnHome}/bin/mvn deploy"
         }
      }
    stage('Building image') {
      steps{
        script {
          dockerImage = docker.build registry
        }
      }
    }
    stage('Deploy Image') {
      steps{
        script {
          docker.withRegistry( '', registryCredential ) {
            dockerImage.push()
          }
        }
      }
    }
      //stage('Deploy to k8s'){
        //    steps{
          //      sshagent(['kops-machine']) {
            //        sh 'envsubst < ${WORKSPACE}/deploy.yaml'
              //      sh "scp -o StrictHostKeyChecking=no deploy.yaml ec2-user@13.235.114.100:/home/ec2-user/"
                //    script{
                  //      try{
                    //        sh "ssh ec2-user@13.235.114.100 kubectl apply -f ."
                      //  }catch(error){
                        //    sh "ssh ec2-user@13.235.114.100 kubectl create -f ."
                       // }
            //        }
          //      }
        //    }
      //}
   }
}
